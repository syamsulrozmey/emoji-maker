-- Complete Emoji Maker Database Schema
-- Run this in your Supabase SQL Editor to create all required tables

-- ============================================================
-- 1. PROFILES TABLE
-- ============================================================
CREATE TABLE IF NOT EXISTS profiles (
  user_id TEXT PRIMARY KEY,
  credits INTEGER DEFAULT 3 NOT NULL,
  tier TEXT NOT NULL DEFAULT 'free' CHECK (tier IN ('free', 'pro')),
  stripe_customer_id TEXT,
  stripe_subscription_id TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- ============================================================
-- 2. EMOJIS TABLE
-- ============================================================
CREATE TABLE IF NOT EXISTS emojis (
  id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  image_url TEXT NOT NULL,
  prompt TEXT NOT NULL,
  likes_count NUMERIC DEFAULT 0,
  creator_user_id TEXT NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ============================================================
-- 3. EMOJI_LIKES TABLE (THIS WAS MISSING!)
-- ============================================================
CREATE TABLE IF NOT EXISTS emoji_likes (
  user_id TEXT REFERENCES profiles(user_id),
  emoji_id BIGINT REFERENCES emojis(id),
  PRIMARY KEY (user_id, emoji_id)
);

-- ============================================================
-- 4. FOLDERS TABLE
-- ============================================================
CREATE TABLE IF NOT EXISTS folders (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name TEXT NOT NULL,
  user_id TEXT NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ============================================================
-- 5. EMOJI_FOLDERS JUNCTION TABLE
-- ============================================================
CREATE TABLE IF NOT EXISTS emoji_folders (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  emoji_id BIGINT NOT NULL REFERENCES emojis(id) ON DELETE CASCADE,
  folder_id UUID NOT NULL REFERENCES folders(id) ON DELETE CASCADE,
  user_id TEXT NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  UNIQUE(emoji_id, user_id)
);

-- ============================================================
-- INDEXES FOR BETTER PERFORMANCE
-- ============================================================
CREATE INDEX IF NOT EXISTS idx_emojis_creator ON emojis(creator_user_id);
CREATE INDEX IF NOT EXISTS idx_emoji_likes_user ON emoji_likes(user_id);
CREATE INDEX IF NOT EXISTS idx_emoji_likes_emoji ON emoji_likes(emoji_id);
CREATE INDEX IF NOT EXISTS idx_folders_user_id ON folders(user_id);
CREATE INDEX IF NOT EXISTS idx_emoji_folders_user_id ON emoji_folders(user_id);
CREATE INDEX IF NOT EXISTS idx_emoji_folders_emoji_id ON emoji_folders(emoji_id);
CREATE INDEX IF NOT EXISTS idx_emoji_folders_folder_id ON emoji_folders(folder_id);

-- ============================================================
-- RPC FUNCTIONS FOR LIKES
-- ============================================================
CREATE OR REPLACE FUNCTION increment_likes(emoji_id BIGINT)
RETURNS void
LANGUAGE plpgsql
AS $$
BEGIN
  UPDATE emojis 
  SET likes_count = likes_count + 1 
  WHERE id = emoji_id;
END;
$$;

CREATE OR REPLACE FUNCTION decrement_likes(emoji_id BIGINT)
RETURNS void
LANGUAGE plpgsql
AS $$
BEGIN
  UPDATE emojis 
  SET likes_count = GREATEST(likes_count - 1, 0) 
  WHERE id = emoji_id;
END;
$$;

-- ============================================================
-- ROW LEVEL SECURITY (RLS) POLICIES
-- ============================================================
ALTER TABLE folders ENABLE ROW LEVEL SECURITY;
ALTER TABLE emoji_folders ENABLE ROW LEVEL SECURITY;

-- Drop existing policies if they exist (to avoid conflicts)
DROP POLICY IF EXISTS "Users can view their own folders" ON folders;
DROP POLICY IF EXISTS "Users can insert their own folders" ON folders;
DROP POLICY IF EXISTS "Users can update their own folders" ON folders;
DROP POLICY IF EXISTS "Users can delete their own folders" ON folders;
DROP POLICY IF EXISTS "Users can view emoji folder assignments" ON emoji_folders;
DROP POLICY IF EXISTS "Users can insert their own emoji folder assignments" ON emoji_folders;
DROP POLICY IF EXISTS "Users can delete their own emoji folder assignments" ON emoji_folders;

-- Folders policies
CREATE POLICY "Users can view their own folders" ON folders
  FOR SELECT USING (true);

CREATE POLICY "Users can insert their own folders" ON folders
  FOR INSERT WITH CHECK (true);

CREATE POLICY "Users can update their own folders" ON folders
  FOR UPDATE USING (true);

CREATE POLICY "Users can delete their own folders" ON folders
  FOR DELETE USING (true);

-- Emoji_folders policies
CREATE POLICY "Users can view emoji folder assignments" ON emoji_folders
  FOR SELECT USING (true);

CREATE POLICY "Users can insert their own emoji folder assignments" ON emoji_folders
  FOR INSERT WITH CHECK (true);

CREATE POLICY "Users can delete their own emoji folder assignments" ON emoji_folders
  FOR DELETE USING (true);

